"use strict";function _createForOfIteratorHelper(e,t){var o="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!o){if(Array.isArray(e)||(o=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){o&&(e=o);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,c=!0,l=!1;return{s:function(){o=o.call(e)},n:function(){var e=o.next();return c=e.done,e},e:function(e){l=!0,r=e},f:function(){try{c||null==o.return||o.return()}finally{if(l)throw r}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,n=new Array(t);o<t;o++)n[o]=e[o];return n}var darkModeToggleButtons=document.querySelectorAll(".dark-mode-toggle-button"),darkModeToggleButtonDesktop=document.getElementById("dark-mode-toggle-button--desktop"),darkModeToggleButtonMobile=document.getElementById("dark-mode-toggle-button--mobile"),activeColorScheme=window.localStorage.getItem("active-color-scheme");null===activeColorScheme&&(window.matchMedia("(prefers-color-scheme: dark)").matches?window.localStorage.setItem("active-color-scheme","dark"):window.localStorage.setItem("active-color-scheme","light"),activeColorScheme=window.localStorage.getItem("active-color-scheme")),"dark"===activeColorScheme?(document.documentElement.classList.add("is-dark-mode"),darkModeToggleButtons.forEach(function(e){e.setAttribute("aria-pressed",!0)})):"light"===activeColorScheme&&darkModeToggleButtons.forEach(function(e){e.setAttribute("aria-pressed",!1)}),darkModeToggleButtons.forEach(function(e){e.addEventListener("click",function(){var t="true"===e.getAttribute("aria-pressed");darkModeToggleButtons.forEach(function(e){e.setAttribute("aria-pressed",!t)}),t?(document.documentElement.classList.remove("is-dark-mode"),window.localStorage.setItem("active-color-scheme","light")):(document.documentElement.classList.add("is-dark-mode"),window.localStorage.setItem("active-color-scheme","dark"))})});var mobileMenuOpenButton=document.querySelector("body > header .hamburger-icon"),mobileMenuCloseButton=document.querySelector("body > .mobile-menu .close-button"),mobileMenu=document.querySelector("body > .mobile-menu"),firstFocusableElement=mobileMenu.querySelector(".first-focusable-element"),lastFocusableElement=mobileMenu.querySelector(".last-focusable-element");mobileMenuOpenButton.addEventListener("click",function(){mobileMenu.classList.add("is-open"),document.body.classList.add("mobile-menu-is-open"),mobileMenuCloseButton.focus()}),mobileMenuCloseButton.addEventListener("click",function(){mobileMenu.classList.remove("is-open"),document.body.classList.remove("mobile-menu-is-open"),mobileMenuOpenButton.focus()}),mobileMenu.addEventListener("keyup",function(e){"Escape"==e.key&&(mobileMenu.classList.remove("is-open"),document.body.classList.remove("mobile-menu-is-open"),mobileMenuOpenButton.focus())}),firstFocusableElement.addEventListener("keydown",function(e){e.shiftKey&&"Tab"==e.key&&(e.preventDefault(),lastFocusableElement.focus())}),lastFocusableElement.addEventListener("keydown",function(e){e.shiftKey||"Tab"!=e.key||(e.preventDefault(),firstFocusableElement.focus())});var isHomePage=null!=document.querySelector(".home-page"),isWorkPage=null!=document.querySelector(".work-page"),isResumePage=null!=document.querySelector(".resume-page"),tabs=document.querySelectorAll('[role="tab"]'),tabPanels=document.querySelectorAll('[role="tabpanel"]');if(isHomePage)loadWorkItems(void 0,10,1);else if(isWorkPage){if(null!=location.hash&&"#"!=location.hash&&""!=location.hash){var hashValue=location.hash.substr(1,location.hash.length),tab=document.getElementById(hashValue+"-button");activateTab(tab)}var category=document.querySelector('[role="tab"][aria-selected="true"]').innerText.toLowerCase();loadWorkItems("all"===category?void 0:category,void 0,void 0,document.querySelector('[role="tabpanel"].is-active .tiles')),tabs.forEach(function(e){e.addEventListener("click",function(e){activateTab(e.target)}),e.addEventListener("keydown",function(e){switch(e.key){case"ArrowLeft":focusPreviousTab();break;case"ArrowRight":focusNextTab();break;case"Home":e.preventDefault(),tabs[0].focus();break;case"End":e.preventDefault(),tabs[tabs.length-1].focus();break;case"Enter":case" ":e.preventDefault(),activateTab(document.activeElement)}})})}else isResumePage&&document.querySelectorAll('[name="version"]').forEach(function(e){e.addEventListener("change",function(e){switch(e.target.getAttribute("value")){case"full":document.querySelectorAll(".is-web-only").forEach(function(e){e.classList.add("is-hidden")}),document.querySelectorAll(".is-non-web").forEach(function(e){e.classList.remove("is-hidden")});break;case"web":document.querySelectorAll(".is-web-only").forEach(function(e){e.classList.remove("is-hidden")}),document.querySelectorAll(".is-non-web").forEach(function(e){e.classList.add("is-hidden")})}})});function loadWorkItems(){var r=0<arguments.length&&void 0!==arguments[0]?arguments[0]:void 0,e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:void 0,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0,c=3<arguments.length&&void 0!==arguments[3]?arguments[3]:void 0;null!=c?c.innerHTML="":document.querySelector(".tiles").innerHTML="",load(r,e,t).then(function(e){var t,o=_createForOfIteratorHelper(e);try{for(o.s();!(t=o.n()).done;){var n=t.value,a=document.createElement("li");a.innerHTML=createWorkItem(n),void 0!==c?c.appendChild(a):document.querySelector(".tiles").appendChild(a)}}catch(e){o.e(e)}finally{o.f()}location.hash=null==r||""==r?"":r})}function createWorkItem(e){return'\n    <a href="'.concat(e.url,'" class="tile">\n      <div class="title">\n        <h2>\n          <span>\n            <b>').concat(e.title,"</b>\n            <small>(").concat(e.year,')</small>\n          </span>\n        </h2>\n      </div>\n\n      <img\n        srcset="').concat(e.image_small," 296w,\n                ").concat(e.image_medium," 444w,\n                ").concat(e.image_large,' 888w"\n        sizes="(max-width: 768px) 296px,\n               (max-width: 1023px) 444px,\n               888px"\n        src="').concat(e.image_large,'"\n        alt=""\n      >\n    </a>\n  ')}function activateTab(e){var t=e.innerText.toLowerCase();tabs.forEach(function(e){e.setAttribute("aria-selected",!1),e.classList.remove("is-highlighted")}),tabPanels.forEach(function(e){e.classList.remove("is-active")}),e.setAttribute("aria-selected",!0),e.classList.add("is-highlighted"),document.getElementById(e.getAttribute("aria-controls")).classList.add("is-active"),loadWorkItems("all"===t?void 0:t,void 0,void 0,document.querySelector('[role="tabpanel"].is-active .tiles'),focus)}function focusPreviousTab(){var e=document.querySelector('[role="tab"][aria-selected="true"]');e!==document.activeElement&&(e=document.activeElement);var t=Array.prototype.slice.call(tabs).indexOf(e);0<t?tabs[t-1].focus():tabs[tabs.length-1].focus()}function focusNextTab(){var e=document.querySelector('[role="tab"][aria-selected="true"]');e!==document.activeElement&&(e=document.activeElement);var t=Array.prototype.slice.call(tabs).indexOf(e);t<tabs.length-1?tabs[t+1].focus():tabs[0].focus()}function load(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:void 0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:void 0,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0;return fetch("/wp-content/themes/jasonwebb.io-theme/php/getItems.php",{method:"POST",body:JSON.stringify({category:e,count:t,offset:o})}).then(function(e){return e.ok?Promise.resolve(e):Promise.reject(new Error("Failed to load"))}).then(function(e){return e.json()}).then(function(e){return e}).catch(function(e){console.log("Error: ".concat(e.message))})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
