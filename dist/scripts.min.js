"use strict";function _createForOfIteratorHelper(e,t){var o="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!o){if(Array.isArray(e)||(o=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){o&&(e=o);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,l=!0,i=!1;return{s:function(){o=o.call(e)},n:function(){var e=o.next();return l=e.done,e},e:function(e){i=!0,r=e},f:function(){try{l||null==o.return||o.return()}finally{if(i)throw r}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,n=new Array(t);o<t;o++)n[o]=e[o];return n}var darkModeToggleButtons=document.querySelectorAll(".dark-mode-toggle-button"),darkModeToggleButtonDesktop=document.getElementById("dark-mode-toggle-button--desktop"),darkModeToggleButtonMobile=document.getElementById("dark-mode-toggle-button--mobile");window.localStorage.getItem("dark-mode-enabled")?darkModeToggleButtons.forEach(function(e){e.setAttribute("aria-pressed",!0)}):darkModeToggleButtons.forEach(function(e){e.setAttribute("aria-pressed",!1)}),darkModeToggleButtons.forEach(function(e){e.addEventListener("click",function(){var t="true"===e.getAttribute("aria-pressed");darkModeToggleButtons.forEach(function(e){e.setAttribute("aria-pressed",!t)}),t?(document.documentElement.classList.remove("is-dark-mode"),window.localStorage.removeItem("dark-mode-enabled")):(document.documentElement.classList.add("is-dark-mode"),window.localStorage.setItem("dark-mode-enabled",!0))})});var mobileMenuOpenButton=document.querySelector("body > header .hamburger-icon"),mobileMenuCloseButton=document.querySelector("body > .mobile-menu .close-button"),mobileMenu=document.querySelector("body > .mobile-menu"),firstFocusableElement=mobileMenu.querySelector(".first-focusable-element"),lastFocusableElement=mobileMenu.querySelector(".last-focusable-element");mobileMenuOpenButton.addEventListener("click",function(){mobileMenu.classList.add("is-open"),document.body.classList.add("mobile-menu-is-open"),mobileMenuCloseButton.focus()}),mobileMenuCloseButton.addEventListener("click",function(){mobileMenu.classList.remove("is-open"),document.body.classList.remove("mobile-menu-is-open"),mobileMenuOpenButton.focus()}),mobileMenu.addEventListener("keyup",function(e){"Escape"==e.key&&(mobileMenu.classList.remove("is-open"),document.body.classList.remove("mobile-menu-is-open"),mobileMenuOpenButton.focus())}),firstFocusableElement.addEventListener("keydown",function(e){e.shiftKey&&"Tab"==e.key&&(e.preventDefault(),lastFocusableElement.focus())}),lastFocusableElement.addEventListener("keydown",function(e){e.shiftKey||"Tab"!=e.key||(e.preventDefault(),firstFocusableElement.focus())});var isHomePage=null!=document.querySelector(".home-page"),isWorkPage=null!=document.querySelector(".work-page"),isResumePage=null!=document.querySelector(".resume-page"),tabs=document.querySelectorAll('[role="tab"]'),tabPanels=document.querySelectorAll('[role="tabpanel"]');if(isHomePage)loadWorkItems(void 0,8,1);else if(isWorkPage){if(null!=location.hash&&"#"!=location.hash&&""!=location.hash){var hashValue=location.hash.substr(1,location.hash.length),tab=document.getElementById(hashValue+"-button");activateTab(tab)}var category=document.querySelector('[role="tab"][aria-selected="true"]').innerText.toLowerCase();loadWorkItems("all"===category?void 0:category,void 0,void 0,document.querySelector('[role="tabpanel"].is-active .tiles')),tabs.forEach(function(e){e.addEventListener("click",function(e){activateTab(e.target)}),e.addEventListener("keydown",function(e){switch(e.key){case"ArrowLeft":focusPreviousTab();break;case"ArrowRight":focusNextTab();break;case"Home":e.preventDefault(),tabs[0].focus();break;case"End":e.preventDefault(),tabs[tabs.length-1].focus();break;case"Enter":case" ":e.preventDefault(),activateTab(document.activeElement)}})})}else isResumePage&&document.querySelectorAll('[name="version"]').forEach(function(e){e.addEventListener("change",function(e){switch(e.target.getAttribute("value")){case"full":document.querySelectorAll(".is-web-only").forEach(function(e){e.classList.add("is-hidden")}),document.querySelectorAll(".is-non-web").forEach(function(e){e.classList.remove("is-hidden")});break;case"web":document.querySelectorAll(".is-web-only").forEach(function(e){e.classList.remove("is-hidden")}),document.querySelectorAll(".is-non-web").forEach(function(e){e.classList.add("is-hidden")})}})});function loadWorkItems(){var r=0<arguments.length&&void 0!==arguments[0]?arguments[0]:void 0,e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:void 0,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0,l=3<arguments.length&&void 0!==arguments[3]?arguments[3]:void 0;null!=l?l.innerHTML="":document.querySelector(".tiles").innerHTML="",load(r,e,t).then(function(e){var t,o=_createForOfIteratorHelper(e);try{for(o.s();!(t=o.n()).done;){var n=t.value,a=document.createElement("li");a.innerHTML=createWorkItem(n),void 0!==l?l.appendChild(a):document.querySelector(".tiles").appendChild(a)}}catch(e){o.e(e)}finally{o.f()}location.hash=null==r||""==r?"":r})}function createWorkItem(e){return'\n    <a href="'.concat(e.url,'" class="tile">\n      <div class="title">\n        <h2>\n          <span>\n            <b>').concat(e.title,"</b>\n            <small>(").concat(e.year,')</small>\n          </span>\n        </h2>\n      </div>\n\n      <img\n        srcset="').concat(e.image_small," 296w,\n                ").concat(e.image_medium," 444w,\n                ").concat(e.image_large,' 888w"\n        sizes="(max-width: 768px) 296px,\n               (max-width: 1023px) 444px,\n               888px"\n        src="').concat(e.image_large,'"\n        alt=""\n      >\n    </a>\n  ')}function activateTab(e){var t=e.innerText.toLowerCase();tabs.forEach(function(e){e.setAttribute("aria-selected",!1),e.classList.remove("is-highlighted")}),tabPanels.forEach(function(e){e.classList.remove("is-active")}),e.setAttribute("aria-selected",!0),e.classList.add("is-highlighted"),document.getElementById(e.getAttribute("aria-controls")).classList.add("is-active"),loadWorkItems("all"===t?void 0:t,void 0,void 0,document.querySelector('[role="tabpanel"].is-active .tiles'),focus)}function focusPreviousTab(){var e=document.querySelector('[role="tab"][aria-selected="true"]');e!==document.activeElement&&(e=document.activeElement);var t=Array.prototype.slice.call(tabs).indexOf(e);0<t?tabs[t-1].focus():tabs[tabs.length-1].focus()}function focusNextTab(){var e=document.querySelector('[role="tab"][aria-selected="true"]');e!==document.activeElement&&(e=document.activeElement);var t=Array.prototype.slice.call(tabs).indexOf(e);t<tabs.length-1?tabs[t+1].focus():tabs[0].focus()}function load(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:void 0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:void 0,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0;return fetch("/wp-content/themes/jasonwebb.io-theme/php/getItems.php",{method:"POST",body:JSON.stringify({category:e,count:t,offset:o})}).then(function(e){return e.ok?Promise.resolve(e):Promise.reject(new Error("Failed to load"))}).then(function(e){return e.json()}).then(function(e){return e}).catch(function(e){console.log("Error: ".concat(e.message))})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudHJ5LmpzIl0sIm5hbWVzIjpbImRhcmtNb2RlVG9nZ2xlQnV0dG9ucyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImRhcmtNb2RlVG9nZ2xlQnV0dG9uRGVza3RvcCIsImdldEVsZW1lbnRCeUlkIiwiZGFya01vZGVUb2dnbGVCdXR0b25Nb2JpbGUiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiZm9yRWFjaCIsImJ1dHRvbiIsInNldEF0dHJpYnV0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJpc1ByZXNzZWQiLCJnZXRBdHRyaWJ1dGUiLCJvdGhlckJ1dHRvbiIsImRvY3VtZW50RWxlbWVudCIsImNsYXNzTGlzdCIsInJlbW92ZSIsInJlbW92ZUl0ZW0iLCJhZGQiLCJzZXRJdGVtIiwibW9iaWxlTWVudU9wZW5CdXR0b24iLCJxdWVyeVNlbGVjdG9yIiwibW9iaWxlTWVudUNsb3NlQnV0dG9uIiwibW9iaWxlTWVudSIsImZpcnN0Rm9jdXNhYmxlRWxlbWVudCIsImxhc3RGb2N1c2FibGVFbGVtZW50IiwiYm9keSIsImZvY3VzIiwiZSIsImtleSIsInNoaWZ0S2V5IiwicHJldmVudERlZmF1bHQiLCJpc0hvbWVQYWdlIiwidW5kZWZpbmVkIiwiaXNXb3JrUGFnZSIsImlzUmVzdW1lUGFnZSIsInRhYnMiLCJ0YWJQYW5lbHMiLCJsb2FkV29ya0l0ZW1zIiwibG9jYXRpb24iLCJoYXNoIiwiaGFzaFZhbHVlIiwic3Vic3RyIiwibGVuZ3RoIiwidGFiIiwiYWN0aXZhdGVUYWIiLCJjYXRlZ29yeSIsImlubmVyVGV4dCIsInRvTG93ZXJDYXNlIiwidGFyZ2V0IiwiZm9jdXNQcmV2aW91c1RhYiIsImZvY3VzTmV4dFRhYiIsImFjdGl2ZUVsZW1lbnQiLCJlbGVtZW50IiwiYXJndW1lbnRzIiwiY291bnQiLCJvZmZzZXQiLCJpbm5lckhUTUwiLCJsb2FkIiwidGhlbiIsIml0ZW1zIiwiX3N0ZXAiLCJfaXRlcmF0b3IiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsInMiLCJuIiwiZG9uZSIsIml0ZW0iLCJ2YWx1ZSIsImxpc3RJdGVtIiwiY3JlYXRlRWxlbWVudCIsImNyZWF0ZVdvcmtJdGVtIiwiYXBwZW5kQ2hpbGQiLCJlcnIiLCJmIiwiZGF0YSIsImNvbmNhdCIsInVybCIsInRpdGxlIiwieWVhciIsImltYWdlX3NtYWxsIiwiaW1hZ2VfbWVkaXVtIiwiaW1hZ2VfbGFyZ2UiLCJ0YWJQYW5lbCIsInNlbGVjdGVkVGFiIiwic2VsZWN0ZWRUYWJJbmRleCIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiaW5kZXhPZiIsImZldGNoIiwibWV0aG9kIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlc3BvbnNlIiwib2siLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIkVycm9yIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiJvcENBR0EsSUFBSUEsc0JBQXdCQyxTQUFTQyxpQkFBaUIsNEJBQ2xEQyw0QkFBOEJGLFNBQVNHLGVBQWUsb0NBQ3REQywyQkFBNkJKLFNBQVNHLGVBQWUsbUNBR3RERSxPQUFPQyxhQUFhQyxRQUFRLHFCQUM3QlIsc0JBQXNCUyxRQUFRLFNBQUNDLEdBQzdCQSxFQUFPQyxhQUFhLGdCQUFnQixLQUd0Q1gsc0JBQXNCUyxRQUFRLFNBQUNDLEdBQzdCQSxFQUFPQyxhQUFhLGdCQUFnQixLQUt4Q1gsc0JBQXNCUyxRQUFRLFNBQUNDLEdBQzdCQSxFQUFPRSxpQkFBaUIsUUFBUyxXQUMvQixJQUFNQyxFQUFvRCxTQUF4Q0gsRUFBT0ksYUFBYSxnQkFFdENkLHNCQUFzQlMsUUFBUSxTQUFDTSxHQUM3QkEsRUFBWUosYUFBYSxnQkFBaUJFLEtBR3pDQSxHQUNEWixTQUFTZSxnQkFBZ0JDLFVBQVVDLE9BQU8sZ0JBQzFDWixPQUFPQyxhQUFhWSxXQUFXLHVCQUUvQmxCLFNBQVNlLGdCQUFnQkMsVUFBVUcsSUFBSSxnQkFDdkNkLE9BQU9DLGFB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WixTQUFTK0IsT0FBa0UsSUFBN0RaLEVBQTZELEVBQUFRLFVBQUFYLGFBQUFWLElBQUFxQixVQUFBLEdBQUFBLFVBQUEsUUFBbERyQixFQUFXc0IsRUFBdUMsRUFBQUQsVUFBQVgsYUFBQVYsSUFBQXFCLFVBQUEsR0FBQUEsVUFBQSxRQUEvQnJCLEVBQVd1QixFQUFvQixFQUFBRixVQUFBWCxhQUFBVixJQUFBcUIsVUFBQSxHQUFBQSxVQUFBLFFBQVhyQixFQUM5RCxPQUFPMEQsTUFBTSx5REFBMEQsQ0FDckVDLE9BQVEsT0FDUmxFLEtBQU1tRSxLQUFLQyxVQUFVLENBQ25CaEQsU0FBVUEsRUFDVlMsTUFBT0EsRUFDUEMsT0FBUUEsTUFHVEcsS0FBSyxTQUFBb0MsR0FDSixPQUFJQSxFQUFTQyxHQUNKQyxRQUFRQyxRQUFRSCxHQUVoQkUsUUFBUUUsT0FBTyxJQUFJQyxNQUFNLHFCQUduQ3pDLEtBQUssU0FBQW9DLEdBQVEsT0FBSUEsRUFBU00sU0FDMUIxQyxLQUFLLFNBQUFnQixHQUNKLE9BQU9BLElBakJKLE1BbUJFLFNBQVUyQixHQUNmQyxRQUFRQyxJQUFSLFVBQUE1QixPQUFzQjBCLEVBQU1HIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgRGFyayBtb2RlXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxubGV0IGRhcmtNb2RlVG9nZ2xlQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kYXJrLW1vZGUtdG9nZ2xlLWJ1dHRvbicpO1xyXG5sZXQgZGFya01vZGVUb2dnbGVCdXR0b25EZXNrdG9wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhcmstbW9kZS10b2dnbGUtYnV0dG9uLS1kZXNrdG9wJyk7XHJcbmxldCBkYXJrTW9kZVRvZ2dsZUJ1dHRvbk1vYmlsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXJrLW1vZGUtdG9nZ2xlLWJ1dHRvbi0tbW9iaWxlJyk7XHJcblxyXG4vLyBTZXQgdGhlIEFSSUEgYnV0dG9uIHN0YXRlIG9uIHBhZ2UgbG9hZCBiYXNlZCBvbiBsb2NhbFN0b3JhZ2VcclxuaWYod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkYXJrLW1vZGUtZW5hYmxlZCcpKSB7XHJcbiAgZGFya01vZGVUb2dnbGVCdXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xyXG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1wcmVzc2VkJywgdHJ1ZSk7XHJcbiAgfSk7XHJcbn0gZWxzZSB7XHJcbiAgZGFya01vZGVUb2dnbGVCdXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xyXG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1wcmVzc2VkJywgZmFsc2UpO1xyXG4gIH0pO1xyXG59XHJcblxyXG4vLyBUb2dnbGUgZGFyayBtb2RlIHdoZW4gYW55IG9mIHRoZSBkYXJrIG1vZGUgdG9nZ2xlIGJ1dHRvbnMgYXJlIGFjdGl2YXRlZC5cclxuZGFya01vZGVUb2dnbGVCdXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xyXG4gIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGNvbnN0IGlzUHJlc3NlZCA9IGJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2FyaWEtcHJlc3NlZCcpID09PSAndHJ1ZScgPyB0cnVlIDogZmFsc2U7XHJcbiAgICBcclxuICAgIGRhcmtNb2RlVG9nZ2xlQnV0dG9ucy5mb3JFYWNoKChvdGhlckJ1dHRvbikgPT4ge1xyXG4gICAgICBvdGhlckJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtcHJlc3NlZCcsICFpc1ByZXNzZWQpO1xyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGlmKGlzUHJlc3NlZCkge1xyXG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaXMtZGFyay1tb2RlJyk7XHJcbiAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnZGFyay1tb2RlLWVuYWJsZWQnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdpcy1kYXJrLW1vZGUnKTtcclxuICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdkYXJrLW1vZGUtZW5hYmxlZCcsIHRydWUpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KTtcclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gIE1vYmlsZSBtZW51IGZ1bmN0aW9uYWxpdHlcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5sZXQgbW9iaWxlTWVudU9wZW5CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5ID4gaGVhZGVyIC5oYW1idXJnZXItaWNvbicpO1xyXG5sZXQgbW9iaWxlTWVudUNsb3NlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keSA+IC5tb2JpbGUtbWVudSAuY2xvc2UtYnV0dG9uJyk7XHJcbmxldCBtb2JpbGVNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keSA+IC5tb2JpbGUtbWVudScpO1xyXG5sZXQgZmlyc3RGb2N1c2FibGVFbGVtZW50ID0gbW9iaWxlTWVudS5xdWVyeVNlbGVjdG9yKCcuZmlyc3QtZm9jdXNhYmxlLWVsZW1lbnQnKTtcclxubGV0IGxhc3RGb2N1c2FibGVFbGVtZW50ID0gbW9iaWxlTWVudS5xdWVyeVNlbGVjdG9yKCcubGFzdC1mb2N1c2FibGUtZWxlbWVudCcpO1xyXG5cclxubW9iaWxlTWVudU9wZW5CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgbW9iaWxlTWVudS5jbGFzc0xpc3QuYWRkKCdpcy1vcGVuJyk7XHJcbiAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdtb2JpbGUtbWVudS1pcy1vcGVuJyk7XHJcbiAgbW9iaWxlTWVudUNsb3NlQnV0dG9uLmZvY3VzKCk7XHJcbn0pO1xyXG5cclxubW9iaWxlTWVudUNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIG1vYmlsZU1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnaXMtb3BlbicpO1xyXG4gIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnbW9iaWxlLW1lbnUtaXMtb3BlbicpO1xyXG4gIG1vYmlsZU1lbnVPcGVuQnV0dG9uLmZvY3VzKCk7XHJcbn0pO1xyXG5cclxubW9iaWxlTWVudS5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChlKSA9PiB7XHJcbiAgaWYoZS5rZXkgPT0gJ0VzY2FwZScpIHtcclxuICAgIG1vYmlsZU1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnaXMtb3BlbicpO1xyXG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdtb2JpbGUtbWVudS1pcy1vcGVuJyk7XHJcbiAgICBtb2JpbGVNZW51T3BlbkJ1dHRvbi5mb2N1cygpO1xyXG4gIH1cclxufSk7XHJcblxyXG5maXJzdEZvY3VzYWJsZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XHJcbiAgaWYoZS5zaGlmdEtleSAmJiBlLmtleSA9PSAnVGFiJykge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgbGFzdEZvY3VzYWJsZUVsZW1lbnQuZm9jdXMoKTtcclxuICB9XHJcbn0pO1xyXG5cclxubGFzdEZvY3VzYWJsZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XHJcbiAgaWYoIWUuc2hpZnRLZXkgJiYgZS5rZXkgPT0gJ1RhYicpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGZpcnN0Rm9jdXNhYmxlRWxlbWVudC5mb2N1cygpO1xyXG4gIH1cclxufSk7XHJcblxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgUGFnZSBmdW5jdGlvbmFsaXR5XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuY29uc3QgaXNIb21lUGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ob21lLXBhZ2UnKSAhPSB1bmRlZmluZWQgPyB0cnVlIDogZmFsc2U7XHJcbmNvbnN0IGlzV29ya1BhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud29yay1wYWdlJykgIT0gdW5kZWZpbmVkID8gdHJ1ZSA6IGZhbHNlO1xyXG5jb25zdCBpc1Jlc3VtZVBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVzdW1lLXBhZ2UnKSAhPSB1bmRlZmluZWQgPyB0cnVlIDogZmFsc2U7XHJcblxyXG5sZXQgdGFicyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tyb2xlPVwidGFiXCJdJyk7XHJcbmxldCB0YWJQYW5lbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbcm9sZT1cInRhYnBhbmVsXCJdJyk7XHJcblxyXG4vLyBIb21lIHBhZ2UgLSBsb2FkIGFsbCB3b3JrIGl0ZW1zXHJcbmlmKGlzSG9tZVBhZ2UpIHtcclxuICBsb2FkV29ya0l0ZW1zKHVuZGVmaW5lZCwgOCwgMSk7XHJcblxyXG4vLyBXb3JrIHBhZ2UgPSBsb2FkIHdvcmsgaXRlbXMgYnkgY2F0ZWdvcnkgYmFzZWQgb24gc2VsZWN0ZWQgdGFnXHJcbn0gZWxzZSBpZihpc1dvcmtQYWdlKSB7XHJcbiAgLy8gU2VsZWN0IGFwcHJvcHJpYXRlIHJhZGlvIGJhc2VkIG9uIGhhc2ggb24gbG9hZFxyXG4gIGlmKGxvY2F0aW9uLmhhc2ggIT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLmhhc2ggIT0gJyMnICYmIGxvY2F0aW9uLmhhc2ggIT0gJycpIHtcclxuICAgIC8vIEFjdGl2YXRlIHRoZSB0YWIgZm9yIHRoaXMgaGFzaFxyXG4gICAgbGV0IGhhc2hWYWx1ZSA9IGxvY2F0aW9uLmhhc2guc3Vic3RyKDEsIGxvY2F0aW9uLmhhc2gubGVuZ3RoKTtcclxuICAgIGxldCB0YWIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChoYXNoVmFsdWUgKyAnLWJ1dHRvbicpO1xyXG4gICAgYWN0aXZhdGVUYWIodGFiKTtcclxuICB9XHJcblxyXG4gIGxldCBjYXRlZ29yeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tyb2xlPVwidGFiXCJdW2FyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCJdJykuaW5uZXJUZXh0LnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gIC8vIExvYWQgaW5pdGlhbCB3b3JrIGl0ZW1zIGZvciB3aGljaGV2ZXIgY2F0ZWdvcnkgaXMgc2VsZWN0ZWQgb24gbG9hZFxyXG4gIGxvYWRXb3JrSXRlbXMoXHJcbiAgICBjYXRlZ29yeSA9PT0gJ2FsbCcgPyB1bmRlZmluZWQgOiBjYXRlZ29yeSxcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tyb2xlPVwidGFicGFuZWxcIl0uaXMtYWN0aXZlIC50aWxlcycpXHJcbiAgKTtcclxuXHJcbiAgLy8gTG9hZCBuZXcgd29yayBpdGVtcyB3aGVuIGNhdGVnb3J5IGNoYW5nZXNcclxuICB0YWJzLmZvckVhY2goZnVuY3Rpb24odGFiKSB7XHJcbiAgICB0YWIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgIGFjdGl2YXRlVGFiKGUudGFyZ2V0KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRhYi5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24oZSkge1xyXG4gICAgICBzd2l0Y2goZS5rZXkpIHtcclxuICAgICAgICBjYXNlICdBcnJvd0xlZnQnOlxyXG4gICAgICAgICAgZm9jdXNQcmV2aW91c1RhYigpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ0Fycm93UmlnaHQnOlxyXG4gICAgICAgICAgZm9jdXNOZXh0VGFiKCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnSG9tZSc6XHJcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICB0YWJzWzBdLmZvY3VzKCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnRW5kJzpcclxuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIHRhYnNbdGFicy5sZW5ndGggLSAxXS5mb2N1cygpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ0VudGVyJzpcclxuICAgICAgICBjYXNlICcgJzpcclxuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIGxldCBzZWxlY3RlZFRhYiA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XHJcbiAgICAgICAgICBhY3RpdmF0ZVRhYihzZWxlY3RlZFRhYik7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9KTtcclxuXHJcbi8vIFJlc3VtZSBwYWdlID0gdG9nZ2xlIGZ1bGwgYW5kIHdlYi1vbmx5IHZlcnNpb25zXHJcbn0gZWxzZSBpZihpc1Jlc3VtZVBhZ2UpIHtcclxuXHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW25hbWU9XCJ2ZXJzaW9uXCJdJykuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XHJcbiAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGUgPT4ge1xyXG4gICAgICBzd2l0Y2goZS50YXJnZXQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpKSB7XHJcbiAgICAgICAgLy8gRnVsbCA9IGhpZGUgYWxsIHdlYi1vbmx5IGl0ZW1zLCBzaG93IGFsbCBub24td2ViLW9ubHkgaXRlbXNcclxuICAgICAgICBjYXNlICdmdWxsJzpcclxuICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pcy13ZWItb25seScpLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdpcy1oaWRkZW4nKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pcy1ub24td2ViJykuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWhpZGRlbicpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIC8vIFdlYiA9IGhpZGUgYWxsIG5vbi13ZWItb25seSBpdGVtcywgc2hvdyBhbGwgd2ViLW9ubHkgaXRlbXNcclxuICAgICAgICBjYXNlICd3ZWInOlxyXG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmlzLXdlYi1vbmx5JykuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWhpZGRlbicpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmlzLW5vbi13ZWInKS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaXMtaGlkZGVuJyk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG59XHJcblxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICBMb2FkIHdvcmsgaXRlbXMgd2l0aCBwcm92aWRlZCBjYXRlZ29yeVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuZnVuY3Rpb24gbG9hZFdvcmtJdGVtcyhjYXRlZ29yeSA9IHVuZGVmaW5lZCwgY291bnQgPSB1bmRlZmluZWQsIG9mZnNldCA9IHVuZGVmaW5lZCwgdGFyZ2V0ID0gdW5kZWZpbmVkLCBmb2N1cyA9IGZhbHNlKSB7XHJcbiAgaWYodGFyZ2V0ICE9IHVuZGVmaW5lZCkge1xyXG4gICAgdGFyZ2V0LmlubmVySFRNTCA9ICcnO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGlsZXMnKS5pbm5lckhUTUwgPSAnJztcclxuICB9XHJcblxyXG4gIC8vIExvYWQgbmV3IGl0ZW1zIHVzaW5nIGhhc2hcclxuICBsZXQgaXRlbVN0cmVhbTtcclxuICBpdGVtU3RyZWFtID0gbG9hZChjYXRlZ29yeSwgY291bnQsIG9mZnNldCk7XHJcblxyXG4gIC8vIFRlbXBsYXRpemUgYW5kIGluamVjdCBpdGVtcyBvbnRvIHBhZ2VcclxuICBpdGVtU3RyZWFtLnRoZW4oaXRlbXMgPT4ge1xyXG4gICAgZm9yKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHtcclxuICAgICAgbGV0IGxpc3RJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcclxuICAgICAgbGlzdEl0ZW0uaW5uZXJIVE1MID0gY3JlYXRlV29ya0l0ZW0oaXRlbSk7XHJcblxyXG4gICAgICBpZih0YXJnZXQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHRhcmdldC5hcHBlbmRDaGlsZChsaXN0SXRlbSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRpbGVzJykuYXBwZW5kQ2hpbGQobGlzdEl0ZW0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2V0IHRoZSBsb2NhdGlvbiBoYXNoIGJhc2VkIG9uIHNlbGVjdGVkIGNhdGVnb3J5IGZvciBib29rbWFya2luZ1xyXG4gICAgaWYoY2F0ZWdvcnkgPT0gdW5kZWZpbmVkIHx8IGNhdGVnb3J5ID09ICcnKSB7XHJcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSBjYXRlZ29yeTtcclxuICAgIH1cclxuICB9KTtcclxufVxyXG5cclxuLy8gVGVtcGxhdGUgZGF0YSBpbnRvIGEgXCJ3b3JrIGl0ZW1cIiBjb21wb25lbnRcclxuZnVuY3Rpb24gY3JlYXRlV29ya0l0ZW0oZGF0YSkge1xyXG4gIHJldHVybiBgXHJcbiAgICA8YSBocmVmPVwiJHtkYXRhLnVybH1cIiBjbGFzcz1cInRpbGVcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cInRpdGxlXCI+XHJcbiAgICAgICAgPGgyPlxyXG4gICAgICAgICAgPHNwYW4+XHJcbiAgICAgICAgICAgIDxiPiR7ZGF0YS50aXRsZX08L2I+XHJcbiAgICAgICAgICAgIDxzbWFsbD4oJHtkYXRhLnllYXJ9KTwvc21hbGw+XHJcbiAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPC9oMj5cclxuICAgICAgPC9kaXY+XHJcblxyXG4gICAgICA8aW1nXHJcbiAgICAgICAgc3Jjc2V0PVwiJHtkYXRhLmltYWdlX3NtYWxsfSAyOTZ3LFxyXG4gICAgICAgICAgICAgICAgJHtkYXRhLmltYWdlX21lZGl1bX0gNDQ0dyxcclxuICAgICAgICAgICAgICAgICR7ZGF0YS5pbWFnZV9sYXJnZX0gODg4d1wiXHJcbiAgICAgICAgc2l6ZXM9XCIobWF4LXdpZHRoOiA3NjhweCkgMjk2cHgsXHJcbiAgICAgICAgICAgICAgIChtYXgtd2lkdGg6IDEwMjNweCkgNDQ0cHgsXHJcbiAgICAgICAgICAgICAgIDg4OHB4XCJcclxuICAgICAgICBzcmM9XCIke2RhdGEuaW1hZ2VfbGFyZ2V9XCJcclxuICAgICAgICBhbHQ9XCJcIlxyXG4gICAgICA+XHJcbiAgICA8L2E+XHJcbiAgYDtcclxufVxyXG5cclxuZnVuY3Rpb24gYWN0aXZhdGVUYWIodGFiKSB7XHJcbiAgbGV0IGNhdGVnb3J5ID0gdGFiLmlubmVyVGV4dC50b0xvd2VyQ2FzZSgpO1xyXG5cclxuICAvLyBEZWFjdGl2YXRlIGFueSBhY3RpdmUgdGFiXHJcbiAgdGFicy5mb3JFYWNoKGZ1bmN0aW9uKHRhYikge1xyXG4gICAgdGFiLnNldEF0dHJpYnV0ZSgnYXJpYS1zZWxlY3RlZCcsIGZhbHNlKTtcclxuICAgIHRhYi5jbGFzc0xpc3QucmVtb3ZlKCdpcy1oaWdobGlnaHRlZCcpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBIaWRlIGFsbCB0YWJwYW5lbHNcclxuICB0YWJQYW5lbHMuZm9yRWFjaChmdW5jdGlvbih0YWJQYW5lbCkge1xyXG4gICAgdGFiUGFuZWwuY2xhc3NMaXN0LnJlbW92ZSgnaXMtYWN0aXZlJyk7XHJcbiAgfSk7XHJcblxyXG4gIC8vIEFjdGl2YXRlIHRoZSBwcm92aWRlZCB0YWJcclxuICB0YWIuc2V0QXR0cmlidXRlKCdhcmlhLXNlbGVjdGVkJywgdHJ1ZSk7XHJcbiAgdGFiLmNsYXNzTGlzdC5hZGQoJ2lzLWhpZ2hsaWdodGVkJyk7XHJcblxyXG4gIC8vIFNob3cgdGhlIHRhYiBwYW5lbCBmb3IgdGhpcyB0YWJcclxuICBsZXQgdGFicGFuZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0YWIuZ2V0QXR0cmlidXRlKCdhcmlhLWNvbnRyb2xzJykpO1xyXG4gIHRhYnBhbmVsLmNsYXNzTGlzdC5hZGQoJ2lzLWFjdGl2ZScpO1xyXG5cclxuICAvLyBMb2FkIGluaXRpYWwgd29yayBpdGVtcyBmb3Igd2hpY2hldmVyIGNhdGVnb3J5IGlzIHNlbGVjdGVkIG9uIGxvYWRcclxuICBsb2FkV29ya0l0ZW1zKFxyXG4gICAgY2F0ZWdvcnkgPT09ICdhbGwnID8gdW5kZWZpbmVkIDogY2F0ZWdvcnksXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbcm9sZT1cInRhYnBhbmVsXCJdLmlzLWFjdGl2ZSAudGlsZXMnKSxcclxuICAgIGZvY3VzXHJcbiAgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZm9jdXNQcmV2aW91c1RhYigpIHtcclxuICBsZXQgc2VsZWN0ZWRUYWIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbcm9sZT1cInRhYlwiXVthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXScpO1xyXG5cclxuICBpZihzZWxlY3RlZFRhYiAhPT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkge1xyXG4gICAgc2VsZWN0ZWRUYWIgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgbGV0IHNlbGVjdGVkVGFiSW5kZXggPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0YWJzKS5pbmRleE9mKHNlbGVjdGVkVGFiKTtcclxuXHJcbiAgaWYoc2VsZWN0ZWRUYWJJbmRleCA+IDApIHtcclxuICAgIHRhYnNbc2VsZWN0ZWRUYWJJbmRleCAtIDFdLmZvY3VzKCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHRhYnNbdGFicy5sZW5ndGggLSAxXS5mb2N1cygpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZm9jdXNOZXh0VGFiKCkge1xyXG4gIGxldCBzZWxlY3RlZFRhYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tyb2xlPVwidGFiXCJdW2FyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCJdJyk7XHJcblxyXG4gIGlmKHNlbGVjdGVkVGFiICE9PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50KSB7XHJcbiAgICBzZWxlY3RlZFRhYiA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBsZXQgc2VsZWN0ZWRUYWJJbmRleCA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRhYnMpLmluZGV4T2Yoc2VsZWN0ZWRUYWIpO1xyXG5cclxuICBpZihzZWxlY3RlZFRhYkluZGV4IDwgdGFicy5sZW5ndGggLSAxKSB7XHJcbiAgICB0YWJzW3NlbGVjdGVkVGFiSW5kZXggKyAxXS5mb2N1cygpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB0YWJzWzBdLmZvY3VzKCk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBsb2FkKGNhdGVnb3J5ID0gdW5kZWZpbmVkLCBjb3VudCA9IHVuZGVmaW5lZCwgb2Zmc2V0ID0gdW5kZWZpbmVkKSB7XHJcbiAgcmV0dXJuIGZldGNoKCcvd3AtY29udGVudC90aGVtZXMvamFzb253ZWJiLmlvLXRoZW1lL3BocC9nZXRJdGVtcy5waHAnLCB7XHJcbiAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5LFxyXG4gICAgICBjb3VudDogY291bnQsXHJcbiAgICAgIG9mZnNldDogb2Zmc2V0XHJcbiAgICB9KVxyXG4gIH0pXHJcbiAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ0ZhaWxlZCB0byBsb2FkJykpO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxyXG4gICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5sb2coYEVycm9yOiAke2Vycm9yLm1lc3NhZ2V9YCk7XHJcbiAgICB9KTtcclxuICB9Il19
